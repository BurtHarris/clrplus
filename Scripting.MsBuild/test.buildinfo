
#defines {
	Tools = { VC10, VC11 };
	Platforms = { x64, x86 };
}

default { // <- This is mapped to a Target in msbuild.

	// this calls 'makeApp' for each parameter set
	// it does so in a seperate instance of msbuild, so there is no issue with target re-use.
	.makeApp : ( ${Tools}, ${Platforms} ) => ${0} & ${1} & Release;

}



makeApp {
	#requires : { WindowsSDK, C };

	// any selected tools will have been 'discovered' and applied before this point.
	
	
	
	Environment {
		// add something else to the environment.
		foo = bar;
	}
	
	Properties { 
		abc = def;
	}
	
	// tasks ///
	.Erase { files: ./output/**/*; };
	.OpenSnapshot { }; // implicit? 
	.Exec : <-- cmd: nmake myApp -->;
	.CloseSnapshot { }; // implicit? 
}

[!(x86 & v110)] // for every other variant do it this way.
makeApp {
	// any selected tools will have been 'discovered' and applied before this point.
	Environment {
		// add something else to the environment.
		foo=bar;
	}
	
	Properties { 
		abc=def;
	}
	
	// tasks ///
	.Erase { files: ./output/**/*; };
	.OpenSnapshot { }; // implicit? 
	.MSBuild { 
		Properties : ${Properties};
		Targets : "Release";
	}
	.CloseSnapshot { }; // implicit? 
}